// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/ToDo.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace SimpleGrpcService {
  public static partial class ToDoVerwaltung
  {
    static readonly string __ServiceName = "ToDo.ToDoVerwaltung";

    static readonly grpc::Marshaller<global::SimpleGrpcService.Empty> __Marshaller_ToDo_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SimpleGrpcService.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SimpleGrpcService.Todos> __Marshaller_ToDo_Todos = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SimpleGrpcService.Todos.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SimpleGrpcService.ToDoItem> __Marshaller_ToDo_ToDoItem = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SimpleGrpcService.ToDoItem.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SimpleGrpcService.ToDoId> __Marshaller_ToDo_ToDoId = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SimpleGrpcService.ToDoId.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::SimpleGrpcService.Ergebnis> __Marshaller_ToDo_Ergebnis = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::SimpleGrpcService.Ergebnis.Parser.ParseFrom);

    static readonly grpc::Method<global::SimpleGrpcService.Empty, global::SimpleGrpcService.Todos> __Method_GetToDos = new grpc::Method<global::SimpleGrpcService.Empty, global::SimpleGrpcService.Todos>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetToDos",
        __Marshaller_ToDo_Empty,
        __Marshaller_ToDo_Todos);

    static readonly grpc::Method<global::SimpleGrpcService.Empty, global::SimpleGrpcService.ToDoItem> __Method_GetToDosStream = new grpc::Method<global::SimpleGrpcService.Empty, global::SimpleGrpcService.ToDoItem>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "GetToDosStream",
        __Marshaller_ToDo_Empty,
        __Marshaller_ToDo_ToDoItem);

    static readonly grpc::Method<global::SimpleGrpcService.ToDoId, global::SimpleGrpcService.ToDoItem> __Method_GetToDo = new grpc::Method<global::SimpleGrpcService.ToDoId, global::SimpleGrpcService.ToDoItem>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetToDo",
        __Marshaller_ToDo_ToDoId,
        __Marshaller_ToDo_ToDoItem);

    static readonly grpc::Method<global::SimpleGrpcService.ToDoItem, global::SimpleGrpcService.Ergebnis> __Method_DeleteToDo = new grpc::Method<global::SimpleGrpcService.ToDoItem, global::SimpleGrpcService.Ergebnis>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteToDo",
        __Marshaller_ToDo_ToDoItem,
        __Marshaller_ToDo_Ergebnis);

    static readonly grpc::Method<global::SimpleGrpcService.ToDoId, global::SimpleGrpcService.Ergebnis> __Method_CheckToDoItem = new grpc::Method<global::SimpleGrpcService.ToDoId, global::SimpleGrpcService.Ergebnis>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckToDoItem",
        __Marshaller_ToDo_ToDoId,
        __Marshaller_ToDo_Ergebnis);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::SimpleGrpcService.ToDoReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ToDoVerwaltung</summary>
    [grpc::BindServiceMethod(typeof(ToDoVerwaltung), "BindService")]
    public abstract partial class ToDoVerwaltungBase
    {
      public virtual global::System.Threading.Tasks.Task<global::SimpleGrpcService.Todos> GetToDos(global::SimpleGrpcService.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task GetToDosStream(global::SimpleGrpcService.Empty request, grpc::IServerStreamWriter<global::SimpleGrpcService.ToDoItem> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SimpleGrpcService.ToDoItem> GetToDo(global::SimpleGrpcService.ToDoId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SimpleGrpcService.Ergebnis> DeleteToDo(global::SimpleGrpcService.ToDoItem request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::SimpleGrpcService.Ergebnis> CheckToDoItem(global::SimpleGrpcService.ToDoId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(ToDoVerwaltungBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetToDos, serviceImpl.GetToDos)
          .AddMethod(__Method_GetToDosStream, serviceImpl.GetToDosStream)
          .AddMethod(__Method_GetToDo, serviceImpl.GetToDo)
          .AddMethod(__Method_DeleteToDo, serviceImpl.DeleteToDo)
          .AddMethod(__Method_CheckToDoItem, serviceImpl.CheckToDoItem).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ToDoVerwaltungBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetToDos, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SimpleGrpcService.Empty, global::SimpleGrpcService.Todos>(serviceImpl.GetToDos));
      serviceBinder.AddMethod(__Method_GetToDosStream, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::SimpleGrpcService.Empty, global::SimpleGrpcService.ToDoItem>(serviceImpl.GetToDosStream));
      serviceBinder.AddMethod(__Method_GetToDo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SimpleGrpcService.ToDoId, global::SimpleGrpcService.ToDoItem>(serviceImpl.GetToDo));
      serviceBinder.AddMethod(__Method_DeleteToDo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SimpleGrpcService.ToDoItem, global::SimpleGrpcService.Ergebnis>(serviceImpl.DeleteToDo));
      serviceBinder.AddMethod(__Method_CheckToDoItem, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::SimpleGrpcService.ToDoId, global::SimpleGrpcService.Ergebnis>(serviceImpl.CheckToDoItem));
    }

  }
}
#endregion
